	var sesh = require('sesh').session;
	var cSettings = require('cSettings');
	var db = require('mongoskin').db(cSettings.db.mongolab.url);

	var dataPool = {
		_pool: [],

		set: function(name, data) {
			if (name === 'undefined') {
				console.error("dataPool: ERROR: name = 'undefined'");
				return;
			}
			this._pool[name] = data;
		},

		get: function(name) { 
			if (typeof(this._pool[name]) !== "undefined") {
				return this._pool[name];
			}
			return false;
		}
	};

	function tryLogin(req, res, name, pw) {
		console.log("try logging in: " + name);
		db.collection('users').findOne({
			'name': name
		}, function(err, user) {
			if (err || (user.pw !== pw)) {
				console.log("Login failed: " + name + "@" + pw + " err:" + JSON.stringify(err));
				if (res) res.end("ERROR");
			}
			else {
				user.id = user._id + '';  //make id to string, otherwise filtering for it fails
				dataPool.set(name, user);
				if (req) req.session.data.user = name;	// needed for sesh
				console.log("Login success: " + name);
				if (res) res.end("OK");
			}
		});
	}

	module.exports = function(req, res, next){
		sesh(req, res, function(req, res){
			// auto log in on development
			if ((cSettings.debug === true) && (req.session.data.user === 'Guest')) {
				req.session.data.user = cSettings.debugConf.autoLogin.name;
			}
			// get user data
			req.user = dataPool.get(req.session.data.user);
			if (!req.user){
				if (require("url").parse(req.url).pathname !== "/login") {
					res.writeHead(307, {
						'Location': "/login"
					});
					res.end();
				} else {
					// check name and pw
					var query = require("url").parse(req.url, true).query;
					if (typeof query.name !== 'undefined') {
						tryLogin(req, res, query.name, query.pw);
					} else {
						require("fs").readFile(__dirname + '/client/views/login.html', function(err, data) {
							if (err) throw err;
							res.end(data);
						});
					}
				}
			} 
			else 
				next(req, res);
		});
	}

	if (cSettings.debug === true) {
		tryLogin(null, null, cSettings.debugConf.autoLogin.name, cSettings.debugConf.autoLogin.pw);	
	}
